// Generated by https://quicktype.io

export interface TechnicalSheet {
    decision:                       Decision;
    privateConditions:              PrivateConditions;
    operationParticipants:          { [key: string]: OperationParticipant[] | null };
    otherConditions:                null | string;
    immediateDecisionRules:         ImmediateDecisionRules;
    contractualInformation:         { [key: string]: null };
    decisionIntervenients:          null | string;
    user:                           null | string;
    number:                         string;
    clientNumber:                   string;
    clientName:                     string;
    clientShortName:                null | string;
    clientShortNameNoSpecialChar:   null | string;
    proposalNumber:                 string;
    decisionDate:                   string;
    decisionExpirationDate:         string;
    createDate:                     string;
    lastInterventionDate:           string;
    lastCaptiveAmountDate:          null | string;
    status:                         string;
    decisionStatus:                 null | string;
    originTechnicalSheetCode:       null | string;
    processDefinition:              string;
    processName:                    string;
    lastVersion:                    TechnicalSheet | null;
    decisionBaseLine:               null | string;
    changeList:                     { [key: string]: null | string }[] | null;
    renewalProcess:                 RenewalProcess;
    scope:                          null | string;
    operationNumber:                null | string;
    origin:                         null | string;
    conditionsChanged:              null | string;
    creditCardInformation:          CreditCardInformation | null;
    technicalSheetOe:               null | string;
    riskDecisionScale:              null | string;
    hiredOperationData:             HiredOperationData | null;
    hiredOperationPempAdjustedData: HiredOperationData | null;
    manualLimitStatus:              null | string;
    operationalReportInformation:   OperationalReportInformation | null;
    limitType:                      null | string;
    economicGroup:                  null | string;
    draft:                          boolean;
}

export interface CreditCardInformation {
    creditCardStatus:     null | string;
    creditCardKitVersion: null | string;
    controlAccountNumber: null | string;
    fundamentals:         null | string;
}

export interface Decision {
    sublimit:                        Sublimit;
    product:                         Product;
    termValue:                       number;
    termUnit:                        string;
    amount:                          number;
    captiveAmount:                   number;
    currency:                        AssignmentsAnnualValueCurrency;
    counterValue:                    number;
    exchangeRate:                    null | string;
    spread:                          number;
    taxType:                         string;
    financingPurpose:                null | string;
    referenceRate:                   ReferenceRate;
    mandatoryCommissions:            MandatoryCommission[];
    mandatoryGuarantees:             MandatoryGuarantee[];
    additionalCommissions:           any[];
    additionalGuarantees:            any[];
    anticipationCommissions:         any[];
    result:                          Result;
    minPareJustifications:           null | string;
    formalizationType:               string;
    contractedCrossSelling:          null | string;
    negotiatedCrossSelling:          null | string;
    assetType:                       null | string;
    deferredCapitalAmount:           null | string;
    deferredCapitalPercentage:       null | string;
    utilizationTermValue:            null | string;
    utilizationTermUnit:             null | string;
    graceTermValue:                  null | string;
    graceTermUnit:                   null | string;
    amortizationTermValue:           null | string;
    amortizationTermUnit:            null | string;
    mortageData:                     null | string;
    modality:                        null | string;
    contractType:                    ContractType;
    annualPaymentOrdersValue:        null | string;
    annualPaymentOrdersCurrency:     null | string;
    averagePaymentOrdersValue:       null | string;
    averagePaymentOrdersCurrency:    null | string;
    averagePaymentOrdersTermValue:   null | string;
    averagePaymentOrdersTermUnit:    null | string;
    maxPaymentOrdersTermValue:       null | string;
    maxPaymentOrdersTermUnit:        null | string;
    financingTermValue:              null | string;
    financingTermUnit:               null | string;
    supportedPrepaymentCharge:       null | string;
    estimatedAdvanceFee:             null | string;
    anticipationTaxType:             null | string;
    anticipationReferenceRate:       null | string;
    anticipationSpread:              null | string;
    commissionFEISpread:             null | string;
    averageInvoicesTermValue:        number;
    averageInvoicesTermUnit:         string;
    assignmentsAnnualValue:          number;
    assignmentsAnnualValueCurrency:  AssignmentsAnnualValueCurrency;
    assignmentsAverageValue:         number;
    assignmentsAverageValueCurrency: AssignmentsAnnualValueCurrency;
    maxInvoiceTermValue:             number;
    maxInvoiceTermUnit:              string;
    renewable:                       null | string;
    operationMaxTerm:                null | string;
}

export enum AssignmentsAnnualValueCurrency {
    Eur = "EUR",
    Pb = "PB",
    Percentage = "PERCENTAGE",
    Year = "YEAR",
}

export interface ContractType {
    code:            string;
    contractType:    string;
    defaultType:     boolean;
    minTermInMonths: null | string;
}

export interface MandatoryCommission {
    code:                      string;
    description:               string;
    pricingValue:              number;
    proposalValue:             number;
    minValue:                  number;
    maxValue:                  number;
    unit:                      AssignmentsAnnualValueCurrency;
    exemptionPercentage:       ExemptionPercentage;
    proposalMinValue:          number;
    calculationType:           string;
    controlValue:              number;
    cost:                      null | string;
    isDisabled:                boolean | null;
    event:                     string;
    subEvent:                  string;
    eventDescription:          string;
    subEventDescription:       null | string;
    type:                      string;
    isAccompanimentCommission: boolean | null;
    commissionType:            string;
    limitValue:                number | null;
    orderIndex:                number;
    startDate:                 string;
    endDate:                   string;
}

export interface ExemptionPercentage {
    max:   number;
    min:   number;
    value: number;
}

export interface MandatoryGuarantee {
    code:                    string;
    description:             string;
    acronym:                 string;
    amount:                  number;
    amountUnit:              AssignmentsAnnualValueCurrency;
    coverage:                number;
    coverageUnit:            AssignmentsAnnualValueCurrency;
    familyCode:              string;
    product:                 Confirmation;
    assetType:               null | string;
    assetSubType:            null | string;
    purpose:                 Confirmation;
    agileCode:               string;
    fixedCoverage:           boolean;
    externalGuaranteeEntity: boolean;
    minCoverage:             null | string;
    maxCoverage:             null | string;
}

export interface Confirmation {
    code:                         null | string;
    name?:                        null | string;
    description:                  string;
    defaultValue?:                boolean | null;
    showAnticipationCommissions?: null | string;
    conditionCode?:               ConditionCode;
}

export enum ConditionCode {
    Verde = "VERDE",
}

export interface Product {
    code:                     string;
    description:              string;
    productFamilyCode:        string;
    agileCode:                string;
    productFamilyDescription: string;
    startValidity:            string;
    endValidity:              string;
    productCategory:          null | string;
    confirmed:                boolean;
}

export interface ReferenceRate {
    code:        string;
    description: string;
    value:       number;
}

export interface Result {
    simulationCode:          string;
    roe:                     Roe;
    allInPrice:              AllInPrice;
    crossSellingRoe:         Roe;
    crossSellingAllInPrice:  AllInPrice;
    priceDecisionScaleValue: string;
    decisionScaleValue:      string;
    competenceOrgan:         string;
    decisionScaleRisk:       string;
    decisionScaleOrgan:      string;
    pareDetails:             PareDetails;
}

export interface AllInPrice {
    unit:          null | string;
    value:         number | null;
    minValue:      number | null;
    pareReference: number | null;
}

export interface Roe {
    unit:        AssignmentsAnnualValueCurrency | null;
    value:       number | null;
    information: null | string;
}

export interface PareDetails {
    amount:                    AllIn;
    consideredTermInYears:     AllIn;
    meanConsideredTermInYears: AllIn;
    spread:                    AllIn;
    commissions:               AllIn;
    commissionDetails:         CommissionDetails;
    allIn:                     AllIn;
    roe:                       Roe;
    indexing:                  AllIn;
    decisionScaleDetails:      DecisionScaleDetail[];
    calculatedScale:           string;
    productFamilyCode:         string;
    productCode:               string;
}

export interface AllIn {
    value:       number | null;
    unit:        AssignmentsAnnualValueCurrency;
    description: null | string;
}

export interface CommissionDetails {
    data:        Datum[];
    totalAmount: AllIn;
    totalSpread: AllIn;
}

export interface Datum {
    description: string;
    amount:      AllIn;
    spread:      AllIn;
}

export interface DecisionScaleDetail {
    decisionScaleValue:  string;
    competenceOrgan:     string;
    minPrice:            AllIn;
    allInPrice:          AllIn;
    commissions:         AllIn;
    minSpread:           AllIn;
    requiredCommissions: AllIn;
    isCalculated:        boolean;
}

export interface Sublimit {
    code:        string;
    description: string;
}

export interface HiredOperationData {
    decision:              Decision;
    operationParticipants: { [key: string]: OperationParticipant[] | null };
    privateConditions:     PrivateConditions;
}

export interface OperationParticipant {
    name:                 string;
    clientNumber:         string;
    taxNumber:            string;
    origin:               Confirmation | null;
    maxExposureLimit:     number | null;
    percentageRatio:      number | null;
    nonComplianceCGD:     boolean | null;
    nonComplianceOICS:    boolean | null;
    maritalStatus:        Confirmation | null;
    rating:               null | string;
    directParticipation:  null | string;
    role:                 null | string;
    mandatorySpouse:      boolean | null;
    canHaveSpouse:        boolean | null;
    spouseOfClientNumber: null | string;
    entityType:           null | string;
}

export interface PrivateConditions {
    paymentMethod:                                null | string;
    tolerance:                                    null | string;
    financingPurpose:                             Confirmation;
    dueDate:                                      null | string;
    renovationDate:                               null | string;
    expirationType:                               null | string;
    boardingDeadlineDate:                         null | string;
    expirationDate:                               null | string;
    creditPaymentAccount:                         null | string;
    invoiceDocuments:                             null | string;
    transferDocuments:                            null | string;
    advancement:                                  null | string;
    retirementTerm:                               null | string;
    retirementTotalTerm:                          null | string;
    retirementAmortization:                       null | string;
    capitalPeriodicity:                           null | string;
    interestPeriodicity:                          Sublimit;
    shipmentType:                                 null | string;
    relatedExportDocumentaryShipmentRdeOperation: null | string;
    controlAccountAmount:                         null | string;
    capitalPlusInterestsCalculationMethod:        null | string;
    assetStatus:                                  null | string;
    equipmentCommercializedByBrandOfficial:       null | string;
    executedNonFinancialInsuranceSimulation:      null | string;
    residualValue:                                null | string;
    residualValueUnit:                            null | string;
    paymentPeriodicity:                           null | string;
    firstRentAmount:                              null | string;
    firstRentAmountUnit:                          null | string;
    leasingType:                                  null | string;
    debtorAcceptorPercentageRatio:                null | string;
    companyAbbreviatedName:                       null | string;
    addressType:                                  null | string;
    controlAccountStatementType:                  null | string;
    statementDay:                                 null | string;
    investmentPurpose:                            null | string;
    investmentAmount:                             null | string;
    investmentType:                               null | string;
    nominalValueExpectedImpact:                   null | string;
    ebitdaExpectedImpact:                         null | string;
    investmentEquityPercentage:                   null | string;
    taxType:                                      null | string;
    referenceRate:                                null | string;
    spread:                                       null | string;
    fundsRefund:                                  null | string;
    purposeAnticipation:                          null | string;
    modalityFinancing:                            null | string;
    advancePercentage:                            number;
    retentionPercentage:                          number;
    notification:                                 Confirmation;
    confirmation:                                 Confirmation;
    riskCoverage:                                 Confirmation;
    insuranceType:                                null | string;
    terminationNoticePeriod:                      number;
    currentAccountTransactions:                   null | string;
}

export interface ImmediateDecisionRules {
    crcPermanentCertificateCode:      string;
    effectAccountNumber:              EffectAccountNumber;
    doIbanAccount:                    null | string;
    titlesAccountNumber:              null | string;
    savingsAccountNumber:             null | string;
    gatCorporateSavingsAccountNumber: null | string;
}

export interface EffectAccountNumber {
    accountNumber:         string;
    adjustedAccountNumber: string;
    iban:                  string;
    fullNumber:            string;
}

export interface OperationalReportInformation {
    isValid:   boolean;
    hasUpdate: boolean;
}

export interface RenewalProcess {
    operation:                    Operation;
    rulesInfo:                    RulesInfo;
    limits:                       Limits;
    indicators:                   Indicators;
    reservedAmount:               number;
    usedPersistedValues:          boolean;
    creditCardsDetailDto:         null | string;
    operationalReportRenewalData: OperationalReportRenewalData;
}

export interface Indicators {
    meetsFinancialCovenant:                    boolean;
    meetsOtherContractualConditions:           boolean;
    operationAccumulatedProfitability6months:  number;
    clientAccumulatedProfitability6months:     null | string;
    operationAccumulatedProfitability12months: number;
    operationAccumulatedProfitabilityDate:     string;
    updateDate:                                string;
    parcEvent:                                 PARCEvent;
}

export interface PARCEvent {
    followupColor: ConditionCode;
    justified:     boolean;
}

export interface Limits {
    globalLimitAvailable:       number;
    globalLimitTotal:           number;
    productSublimitAvailable:   number;
    productSublimitTotal:       number;
    productSublimitDescription: string;
    updateDate:                 string;
}

export interface Operation {
    number:                         string;
    originalAmount:                 number;
    contractStartDate:              string;
    contractEndDate:                string;
    productTerminationNoticePeriod: number;
}

export interface OperationalReportRenewalData {
    isValid:     null | string;
    contract:    Contract;
    operationId: number;
    externalId:  string;
}

export interface Contract {
    daysOverdue:           null | string;
    lastYearInhibitions:   number;
    returnedSddsRegisters: number;
    uploadDate:            string;
    managerName:           string;
    creditNotes:           number;
    advanceCeiling:        number;
    clientNumbers:         null | string;
}

export interface RulesInfo {
    key:                 string;
    adviceResult:        ConditionCode;
    renewalScopeDetails: RenewalScopeDetails;
}

export interface RenewalScopeDetails {
    businessKey:    string;
    resultStatus:   ConditionCode;
    executedRules:  ExecutedRule[];
    triggeredRules: string[];
    executionDate:  string;
}

export interface ExecutedRule {
    name:               string;
    version:            string;
    code:               string;
    ruleCode:           ConditionCode;
    executionTime:      string;
    executedConditions: Confirmation[];
}